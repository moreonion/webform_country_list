<?php
/**
 * @file
 */

/**
 * Implements _webform_defaults_[component]().
 */
function _webform_defaults_country_list() {
 $element = array(
    'name'      => 'Country List',
    'form_key'  => NULL,
    'value'     => '',
    'weight'    => 0,
    'extra' => array(
      'available_countries'      => array(),
      'private'                  => FALSE,
    ),
  );

  return $element;
}

/**
 * Implements _webform_edit_[component]().
 */
function _webform_edit_country_list($component) {
  $all_countries = array('AT' => 'Austria', 'DE' => 'Germany', 'ES' => 'Spain');
  $delta = 0;
  $form = array(
    'country_list' => array(
      '#type' => 'container',
    ),
  );
  foreach ($all_countries as $country_code => $country) {
    $form['country_list'][$delta] = array(
      '#type' => 'container',
    );
    $form['country_list'][$delta]['available'] = array(
      '#type' => 'checkbox',
      '#return_value' => $country_code,
      '#default_value' => !empty($component['extra']['available_countries'][$country_code]) ? $component['extra']['available_countries'][$country_code] : NULL,
      '#attributes' => array('class' => array('country-list-available')),
    );
    $form['country_list'][$delta]['country_code'] = array(
      '#markup' =>  '<span class="country-list-code">' . $country_code . '</span>',
    );
    $form['country_list'][$delta]['label'] = array(
      '#markup' => '<span class="country-list-country">' . $country . '</span>',
    );
    $delta++;
  }
  $form['country_list']['#theme'] = 'country_list_form';
  $form['country_list']['#element_validate'] = array('_webform_edit_country_list_validate');

  return $form;
}

function _webform_edit_country_list_validate(&$element, &$form_state) {
  dpm($form_state['values'], 'form_state');
  foreach ($form_state['values']['country_list'] as $delta => $value) {
    if ($value['available'] !== 0) {
      $form_state['values']['extra']['available_countries'][$value['available']] = $value['available'];
    }
  }
  dpm($form_state['values'], 'form state values');
}

/**
 * Implements _webform_render_[component]().
 */
function _webform_render_country_list($component, $value = NULL, $filter = TRUE) {
  $all_countries = array('AT' => 'Austria', 'DE' => 'Germany', 'ES' => 'Spain');
  $available_countries = array();
  if (!empty($component['extra']['available_countries'])) {
    $available_countries = array_intersect_key($all_countries, $component['extra']['available_countries']);
  }
  else {
    $available_countries = $all_countries;
  }
  $element = array(
    '#type' => 'select',
    '#options' => $available_countries,
  );

  return $element;
}

/**
 * Implements hook_webform_component_info().
 */
function webform_country_list_webform_component_info() {
  $components['country_list'] = array(
    'label'       => t('Country List'),
    'description' => t('Provides a selectable list of countries for a webform.'),
    'features'    => array(
      'default_value' => FALSE,
      'required'      => TRUE,
    ),
  );

  return $components;
}
/**
 * Implements hook_theme().
 */
function webform_country_list_theme() {
  return array(
    'country_list_form' => array(
      'render element' => 'element',
    ),
  );
}

function theme_country_list_form($variables) {
  $element  = $variables['element'];
  $output   = '';
  $table_id = drupal_html_id('country_list_values');

  $order_class = 'country-list-delta-order';

  $header = array(
    '',
    array(
      'data' => '<div class="country-list-table-header"><label class="country-list-label-available">' . t('Available') . '</label>' . '<label class="country-list-label-code">' . t('Country Code') . '</label>' . '<label class="country-list-label-country">' . t('Country') . '</label></div>',
      'class' => array('field-label'),
    ),
  );
  $rows = array();

  $items = array();
  foreach (element_children($element) as $key) {
    $items[] = &$element[$key];
  }

  // Add the items as table rows.
  foreach ($items as $key => $item) {
    $item['_weight']['#attributes']['class'] = array($order_class);
    $cells = array(
      array('data' => '', 'class' => array('field-multiple-drag')),
      drupal_render($item)
    );
    $rows[] = array(
      'data' => $cells,
      'class' => array('draggable'),
    );
  }

  $output = '<div class="form-item">';
  $output .= theme(
    'table',
    array(
      'header' => $header,
      'rows' => $rows,
      'attributes' => array(
        'id' => $table_id,
        'class' => array('field-multiple-table'),
      ),
    )
  );
  //$output .= $element['#description'] ? '<div class="description">' . $element['#description'] . '</div>' : '';
  //$output .= '<div class="clearfix">' . drupal_render($add_more_button) . '</div>';
  $output .= '</div>';

  drupal_add_tabledrag($table_id, 'order', 'sibling', $order_class);

  return $output;
}